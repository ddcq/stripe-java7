buildscript {
    repositories {
        jcenter()
        //Add only for SNAPSHOT versions
        //maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.20.0"
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'io.franzbecker.gradle-lombok' version '3.1.0'
    id "com.diffplug.gradle.spotless" version "3.23.1"
    id "net.ltgt.errorprone" version "0.8.1"
    id 'net.saliman.cobertura' version '2.6.1'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'biz.aQute.bnd.builder' version '4.2.0'
    id 'idea' // optional (to generate IntelliJ IDEA project files)
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = GROUP
version = VERSION_NAME

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all" << "-Xlint:-options" << "-Xlint:-processing"
    options.encoding = 'UTF-8'

    options.errorprone {
      // This check is broken in Java 12.  See https://github.com/google/error-prone/issues/1257
      if ((JavaVersion.current().majorVersion as Integer) > 11) {
        check('Finally', net.ltgt.gradle.errorprone.CheckSeverity.OFF)
      }
    }
}

compileJava {
    options.compilerArgs << "-Werror"
}

configurations.all {
}

repositories {
    jcenter()
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version:'2.8.5'
    compile group: 'com.google.guava', name: 'guava', version:'28.0-jre'
    errorprone group: 'com.google.errorprone', name: 'error_prone_core', version: '2.3.3'
    errorproneJavac group: 'com.google.errorprone', name: 'javac', version:'9+181-r4173-1'
}

jar {
    manifest {
        attributes("Implementation-Title": POM_NAME,
                   "Implementation-Version": VERSION_NAME,
                   "Implementation-Vendor": VENDOR_NAME,
                   "Bundle-SymbolicName": POM_ARTIFACT_ID,
                   "Export-Package": 'com.stripe.*')

        version = VERSION_NAME
    }
}

javadoc {
    dependsOn compileJava
    source = file("$buildDir/classes/java/main")
    failOnError = true
}

apply from: 'deploy.gradle'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

spotless {
  java {
    googleJavaFormat('1.7')
    removeUnusedImports()
  }
}

cobertura {
    coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report
    coverageIgnoreTrivial = true // ignore getters/setters in coverage report
    coverageIgnoreMethodAnnotations = ["java.lang.Deprecated", "lombok.Generated"]
}
